<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[lcomplete's Blog]]></title>
  <link href="http://lcomplete.github.com/atom.xml" rel="self"/>
  <link href="http://lcomplete.github.com/"/>
  <updated>2013-06-02T02:52:30+08:00</updated>
  <id>http://lcomplete.github.com/</id>
  <author>
    <name><![CDATA[lcomplete]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在windows下通过cygwin使用octopress]]></title>
    <link href="http://lcomplete.github.com/blog/2013/06/01/use-octopress-in-cygwin/"/>
    <updated>2013-06-01T16:50:00+08:00</updated>
    <id>http://lcomplete.github.com/blog/2013/06/01/use-octopress-in-cygwin</id>
    <content type="html"><![CDATA[<p>在windows下使用git和octopress还真是个麻烦事，本文记录了在windows下利用cygwin安装git和使用octopress的过程，希望对大家有所帮助。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[七周七语言之用ruby做点什么]]></title>
    <link href="http://lcomplete.github.com/blog/2013/05/25/sevenlang-ruby/"/>
    <updated>2013-05-25T01:13:00+08:00</updated>
    <id>http://lcomplete.github.com/blog/2013/05/25/sevenlang-ruby</id>
    <content type="html"><![CDATA[<blockquote><p>每学一门语言，思维方式都会发生改变，编程语言亦是如此。
<div style="text-align:right;">《七周七语言》</div></p></blockquote>

<p>编程语言从范型上来划分，主要有过程式语言、面向对象式语言和函数式语言，只有了解这些语言的变化、发展和设计哲学，深入地学习它们，才能够将它们融汇贯通，体会到不同范型中的精华和思想。如今有众多的编程语言，五花八门，《七周七语言》中挑选了7门优秀的语言进行讲解，这些语言包括了以上三种范型，其中有Ruby这样的面向对象的脚本语言、Io这样的原型语言、Haskell这样的纯函数式语言，也有Scala这种融合了函数式编程和面向对象编程的语言，这些语言都有其特别的设计和独门绝技，比如Ruby的简洁、效率和它的元编程特性。</p>

<p>这一系列的博客打算写7篇，每一篇以一门编程语言为主，用它来实际写一些小程序，这些程序是可用但非正式的，一些逻辑不会写的很严谨，主要是为了突出语言的一些用法和特性，我不会列出一段段代码，然后讲解里面涉及的概念，而是直接贴出完整的代码，将一些语法规则以注释形式给出。</p>

<p>本次用Ruby写了一段抓取程序，可以抓取煎蛋上的优质无聊图和妹子图，其中解析html用到了nokogiri模块。这段程序总共只有几十行代码，为了多使用一些语言上的特性，我还加了一些没必要的代码，如果再精简一下的话，这段程序可以非常简短，实在是不得不佩服ruby的简洁和效率。</p>

<p>不多说了，直接上代码吧！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#encoding: utf-8</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;net/http&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;open-uri&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;nokogiri&#39;</span> <span class="c1"># 用于解析html的模块</span>
</span><span class='line'>                   <span class="c1"># sudo apt-get install libxslt-dev libxml2-dev </span>
</span><span class='line'>                   <span class="c1"># sudo gem install nokogiri</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;pathname&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">JanDanSpider</span>
</span><span class='line'>    <span class="kp">attr_accessor</span> <span class="ss">:base_uri</span><span class="p">,</span> <span class="ss">:cur_page</span> <span class="c1"># 定义属性访问器</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">pagesize</span><span class="p">)</span>
</span><span class='line'>        <span class="vi">@base_uri</span> <span class="o">=</span> <span class="s1">&#39;http://jandan.net/pic&#39;</span> <span class="c1"># @表示实例变量、@@表示类变量、$表示局部变量</span>
</span><span class='line'>        <span class="vi">@dir</span> <span class="o">=</span> <span class="s1">&#39;/media/Develop/MyCode/SevenLang/ruby/pic&#39;</span>
</span><span class='line'>        <span class="vi">@pagesize</span> <span class="o">=</span> <span class="nb">Integer</span><span class="p">(</span><span class="n">pagesize</span><span class="p">)</span> <span class="c1"># 整型转换</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">crawl</span><span class="p">()</span>
</span><span class='line'>        <span class="no">Dir</span><span class="o">.</span><span class="n">mkdir</span> <span class="vi">@dir</span> <span class="k">unless</span> <span class="no">File</span><span class="o">.</span><span class="n">directory?</span> <span class="vi">@dir</span> <span class="c1"># 表判断的方法结尾都有个?</span>
</span><span class='line'>        <span class="n">totalpage</span> <span class="o">=</span> <span class="n">crawlpage</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;pagesize </span><span class="si">#{</span><span class="n">totalpage</span><span class="si">}</span><span class="s2">&quot;</span> <span class="c1"># &quot;&quot;字符会引发字符串替换，&#39;&#39;则不会</span>
</span><span class='line'>        <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="vi">@pagesize</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="c1"># 遍历元组</span>
</span><span class='line'>            <span class="n">crawlpage</span><span class="p">(</span><span class="n">totalpage</span> <span class="o">-</span> <span class="n">i</span><span class="p">)</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s1">&#39;complete!&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">crawlpage</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
</span><span class='line'>        <span class="n">url</span> <span class="o">=</span> <span class="n">page</span><span class="o">==</span><span class="mi">0</span> <span class="o">?</span> <span class="vi">@base_uri</span> <span class="p">:</span> <span class="vi">@base_uri</span><span class="o">+</span><span class="s1">&#39;/page-&#39;</span><span class="o">+</span><span class="n">page</span><span class="o">.</span><span class="n">to_s</span> <span class="c1"># to_s是必要的</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;crawl-page: </span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">fpage</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>        <span class="n">html</span> <span class="o">=</span> <span class="n">fpage</span><span class="o">.</span><span class="n">read</span>
</span><span class='line'>        <span class="n">doc</span> <span class="o">=</span> <span class="ss">Nokogiri</span><span class="p">:</span><span class="ss">:HTML</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</span><span class='line'>        <span class="n">doc</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;ol.commentlist li&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">comment</span><span class="o">|</span>
</span><span class='line'>            <span class="n">match</span> <span class="o">=</span> <span class="sr">/comment-(\d+)/</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">comment</span><span class="o">[</span><span class="s1">&#39;id&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">match</span>
</span><span class='line'>                <span class="nb">id</span> <span class="o">=</span> <span class="n">match</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>                <span class="n">oo</span> <span class="o">=</span> <span class="nb">Integer</span><span class="p">(</span><span class="n">comment</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;#cos_support&#39;</span><span class="o">+</span><span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="nb">id</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">content</span><span class="p">);</span>
</span><span class='line'>                <span class="n">xx</span> <span class="o">=</span> <span class="nb">Integer</span><span class="p">(</span><span class="n">comment</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;#cos_unsupport&#39;</span><span class="o">+</span><span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="nb">id</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">content</span><span class="p">);</span>
</span><span class='line'>                <span class="n">xx</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">xx</span><span class="o">==</span><span class="mi">0</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="n">oo</span><span class="o">&gt;</span><span class="n">xx</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">oo</span><span class="o">&gt;</span><span class="mi">200</span> <span class="o">||</span> <span class="n">oo</span><span class="o">/</span><span class="n">xx</span> <span class="o">&gt;</span><span class="mi">10</span><span class="p">)</span> <span class="p">)</span>
</span><span class='line'>                    <span class="n">src</span> <span class="o">=</span> <span class="n">comment</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;p img&#39;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;src&quot;</span><span class="o">]</span>
</span><span class='line'>                    <span class="nb">puts</span> <span class="s2">&quot;crawl: oo </span><span class="si">#{</span><span class="n">oo</span><span class="si">}</span><span class="s2"> xx </span><span class="si">#{</span><span class="n">xx</span><span class="si">}</span><span class="s2"> src </span><span class="si">#{</span><span class="n">src</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>                    <span class="n">save_pic</span><span class="p">(</span><span class="n">src</span><span class="p">)</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">page</span><span class="o">==</span><span class="mi">0</span>
</span><span class='line'>            <span class="n">cur_page</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s2">&quot;.current-comment-page&quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">content</span>
</span><span class='line'>            <span class="n">page</span> <span class="o">=</span> <span class="nb">Integer</span><span class="p">(</span><span class="sr">/\d+/</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">cur_page</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;page </span><span class="si">#{</span><span class="n">page</span><span class="si">}</span><span class="s2"> done!&quot;</span>
</span><span class='line'>        <span class="n">page</span> <span class="c1"># ruby中每条语句都有返回值，函数内最后一条语句的返回值会被return</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">save_pic</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>        <span class="n">urlpath</span> <span class="o">=</span> <span class="no">Pathname</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>        <span class="n">filename</span> <span class="o">=</span> <span class="n">urlpath</span><span class="o">.</span><span class="n">basename</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>        <span class="n">dirpath</span> <span class="o">=</span> <span class="no">Pathname</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@dir</span><span class="p">)</span>
</span><span class='line'>        <span class="n">filepath</span> <span class="o">=</span> <span class="n">dirpath</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>        <span class="nb">open</span><span class="p">(</span><span class="n">url</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">fin</span><span class="o">|</span>
</span><span class='line'>            <span class="nb">open</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span><span class="s2">&quot;wb&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">fout</span><span class="o">|</span>
</span><span class='line'>                <span class="k">while</span> <span class="n">buf</span> <span class="o">=</span> <span class="n">fin</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4096</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>                    <span class="n">fout</span><span class="o">.</span><span class="n">write</span> <span class="n">buf</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">unless</span> <span class="no">File</span><span class="o">.</span><span class="n">exists?</span> <span class="n">filepath</span> <span class="c1"># 仅当文件不存在时进行抓取</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s1">&#39;done!&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">spider</span> <span class="o">=</span> <span class="no">JanDanSpider</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vg">$*</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">)</span> <span class="c1"># 可从 ARGV 或 $* 读取命令行参数</span>
</span><span class='line'>    <span class="n">spider</span><span class="o">.</span><span class="n">crawl</span><span class="p">()</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;please input pagesize&#39;</span> <span class="c1">#tip: puts, 转义+换行符 print, 转义 p, 换行</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello github, hello Octopress, and hello markdown]]></title>
    <link href="http://lcomplete.github.com/blog/2013/04/03/hello-github/"/>
    <updated>2013-04-03T22:16:00+08:00</updated>
    <id>http://lcomplete.github.com/blog/2013/04/03/hello-github</id>
    <content type="html"><![CDATA[<p>Hello visitors.</p>

<p>This is my first blog, I use <strong>markdown</strong> syntax to write this post.<br/>
I heard the markdown a few years ago, but never write it before, the blog and
something about this are totally a new thing for me, I think this will get more
and more interesting.</p>

<p>This blog is deploy by <strong>Octopress</strong>, and host on the <strong>github</strong>.
These stuff are very excellent and remarkable, but these are totally free and
open, I just want thank these guys who work on that, and wish someday I will
be the one of these people.</p>

<hr />

<br>


<p>So, this is my blog, to be continue.</p>
]]></content>
  </entry>
  
</feed>
